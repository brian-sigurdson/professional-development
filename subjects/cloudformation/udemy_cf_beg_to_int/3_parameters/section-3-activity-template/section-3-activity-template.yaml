AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Section 3 Activity template. 
  It launches a VPC with public and private subnets, 
  a web server EC2 instance in the public subnet 
  and a security group attached to this EC2 instance.

Parameters:
  EC2InstanceType:
    Type: String
    Description: The ec2 instance type.
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
    Default: t2.micro
  EC2ImageId:
    Type: String
    Description: The ami id for the ec2 instance.
    Default: ami-001089eb624938d9f #ohio us-east-2
  EbsVolumeSize:
    Type: Number
    Description: An integer between 8 and 20 GiB.
    MinValue: 8
    MaxValue: 20
    Default: 8
  AwsKeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: The name of the key pair for the ec2 instance.
  CidrBlocks:
    Type: CommaDelimitedList
    Description: 'Provide a comma seperated list: <vpc-cidr>,<public-cidr>,<private-cidr>'
    Default: '10.0.0.0/16, 10.0.0.0/24, 10.0.1.0/24'
  AvailabilityZones:
    Type: List<AWS::EC2::AvailabilityZone::Name>
    Description: Availability Zones for the public (1st selection) and private (2nd selection) subnets.

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Description: Section 3 activity VPC
    Properties:
      CidrBlock: !Select [0, !Ref CidrBlocks]
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        -
          Key: Name
          Value: !Sub '{AWS::StackName}-vpc'

  # Subnets ---        
  PublicSubnet:
    Type: AWS::EC2::Subnet 
    Properties:
      AvailabilityZone: !Select [0, !Ref AvailabilityZones]
      CidrBlock: !Select [1, !Ref CidrBlocks]
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
      Tags:
        -
          Key: Name
          Value: Public Subnet

  PrivateSubnet:
    Type: AWS::EC2::Subnet 
    Properties:
      AvailabilityZone: !Select [1, !Ref AvailabilityZones]
      CidrBlock: !Select [2, !Ref CidrBlocks]
      VpcId: !Ref Vpc
      Tags:
        -
          Key: Name
          Value: Private Subnet

  # Route tables ---
  PublicRouteTable:
    Type: AWS::EC2::RouteTable 
    Properties:
      VpcId: !Ref Vpc
      Tags:
        -
          Key: Name
          Value: Public Route Table
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable 
    Properties:
      VpcId: !Ref Vpc
      Tags:
        -
          Key: Name
          Value: Private Route Table

  # Internet route for the public route table ---
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  VpcGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway
  InternetRoute:
    Type: AWS::EC2::Route 
    DependsOn:
      - VpcGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      GatewayId: !Ref InternetGateway
      DestinationCidrBlock: 0.0.0.0/0

  # Subnet - Route table associations ---    
  PublicSubnetRouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet
  PrivateSubnetRouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet

  # Web server and security group ---
  WebServerInstance:
    Type: AWS::EC2::Instance 
    DependsOn:
      - InternetRoute
      - PublicSubnetRouteTableAssoc
    Properties:
      InstanceType: !Ref EC2InstanceType
      SubnetId: !Ref PublicSubnet 
      ImageId: !Ref EC2ImageId
      SecurityGroupIds:
        - !Ref WebServerSecurityGroup
      BlockDeviceMappings:
        - 
          DeviceName: /dev/sdf
          Ebs:
            VolumeSize: !Ref EbsVolumeSize
            VolumeType: gp2
      Tags:
        -
          Key: Name
          Value: Web Server
      KeyName: !Ref AwsKeyPair

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup 
    Properties:
      GroupDescription: Activity security group 
      VpcId: !Ref Vpc
      SecurityGroupIngress:
              
        # HTTP rule
        -
          CidrIp: 0.0.0.0/0 
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80

        # SSH rule
        -
          CidrIp: 0.0.0.0/0 
          IpProtocol: tcp
          FromPort: 22 
          ToPort: 22


